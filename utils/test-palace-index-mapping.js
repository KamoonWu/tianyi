// ц╡ЛшпХхолф╜Нч┤вх╝ХцШах░Д
console.log('=== ц╡ЛшпХхолф╜Нч┤вх╝ХцШах░Д ===');

const { SIX_LINES, LAYOUT_INDEX, getPalaceIndex } = require('./palace-lines');

console.log('холф╜Нч┤вх╝ХцШах░Д:', LAYOUT_INDEX);
console.log('хЕнцЭбч║┐хоЪф╣Й:', SIX_LINES);

// ц╡ЛшпХцпПцЭбч║┐чЪДхолф╜Нч┤вх╝Х
console.log('\n=== ц╡ЛшпХцпПцЭбч║┐чЪДхолф╜Нч┤вх╝Х ===');

Object.entries(SIX_LINES).forEach(([key, line]) => {
  const idx1 = getPalaceIndex(line.palaces[0]);
  const idx2 = getPalaceIndex(line.palaces[1]);
  
  console.log(`${key}:`, {
    palace1: line.palaces[0],
    palace2: line.palaces[1],
    idx1,
    idx2,
    valid: idx1 >= 0 && idx2 >= 0,
    color: line.color,
    alias: line.alias
  });
});

// щкМшпБцЙАцЬЙхолф╜НщГ╜цЬЙцнгчбочЪДч┤вх╝Х
console.log('\n=== щкМшпБхолф╜Нч┤вх╝ХхоМцХ┤цАз ===');

const allPalaces = [
  'хС╜хол', 'хЕДх╝Яхол', 'хдлхж╗хол', 'хнРхе│хол',
  'ш┤вх╕Ыхол', 'ш┐Бчз╗хол', 'чЦ╛хОДхол', 'ф║дхПЛхол',
  'ф║Лф╕Ъхол', 'чФ░хоЕхол', 'чжПх╛╖хол', 'чИ╢цпНхол'
];

allPalaces.forEach(palace => {
  const index = getPalaceIndex(palace);
  console.log(`${palace}: ч┤вх╝Х ${index} ${index >= 0 ? 'тЬЕ' : 'тЭМ'}`);
});

// ц╡ЛшпХ4x4х╕Гх▒АчЪДхолф╜НцОТхИЧ
console.log('\n=== 4x4х╕Гх▒Ахолф╜НцОТхИЧ ===');

const layout4x4 = [
  ['хС╜хол', 'хЕДх╝Яхол', 'хдлхж╗хол', 'хнРхе│хол'],
  ['ш┤вх╕Ыхол', 'ф╕нхол', 'ф╕нхол', 'ш┐Бчз╗хол'],
  ['чЦ╛хОДхол', 'ф╕нхол', 'ф╕нхол', 'ф║дхПЛхол'],
  ['ф║Лф╕Ъхол', 'чФ░хоЕхол', 'чжПх╛╖хол', 'чИ╢цпНхол']
];

layout4x4.forEach((row, rowIndex) => {
  const rowStr = row.map((palace, colIndex) => {
    if (palace === 'ф╕нхол') {
      return 'ф╕нхол';
    } else {
      const index = getPalaceIndex(palace);
      return `${palace}(${index})`;
    }
  }).join(' | ');
  
  console.log(`чмм${rowIndex + 1}шбМ: ${rowStr}`);
});

console.log('\nЁЯОЙ холф╜Нч┤вх╝ХцШах░Дц╡ЛшпХхоМцИРя╝Б');
console.log('хжВцЮЬцЙАцЬЙхолф╜НщГ╜цЬЙцнгчбочЪДч┤вх╝Хя╝Мшп┤цШОцШах░ДцШпцнгчбочЪД'); 